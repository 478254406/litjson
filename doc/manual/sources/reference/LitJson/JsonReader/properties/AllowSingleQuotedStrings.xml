<?xml version="1.0" encoding="utf-8"?>

<refentry xmlns="http://docbook.org/ns/docbook"
          xml:id="P.LitJson.JsonReader.AllowSingleQuotedStrings">
  <refnamediv>
    <refname>AllowSingleQuotedStrings</refname>
    <refpurpose>
      Specifies whether the reader accepts strings enclosed within single
      quotes
    </refpurpose>
  </refnamediv>

  <refsection role="description">
    <fieldsynopsis language="csharp" role="get,set">
      <modifier>public</modifier>
      <type>bool</type>
      <varname>AllowSingleQuotedStrings</varname>
    </fieldsynopsis>

    <para>
      An instance of <classname>JsonReader</classname> can be configured to
      accept strings delimited by the single quote character
      (<literal>'</literal>), something which is not part of the strict JSON
      grammar.
    </para>
    <para>
      The value of this property is <literal>true</literal> by default.
    </para>
  </refsection>

  <refsection role="examples">
    <example>
      <title><varname>AllowSingleQuotedStrings</varname> examples</title>
      <programlisting language="csharp">
<![CDATA[
using LitJson;

class JsonSample
{
    void ReadJsonStrings ()
    {
        // Notice the second element
        string json = "[ \"one\", 'two', \"three\" ]";

        JsonReader reader = new JsonReader (json);

        while (reader.Read ()) {
            // Do something with the tokens read
        }

        // New instance to begin reading again
        reader = new JsonReader (json);
        reader.AllowSingleQuotedStrings = false;

        while (reader.Read ()) {
            // An exception would be thrown here
        }
    }
}
]]>
      </programlisting>
    </example>
  </refsection>
</refentry>
